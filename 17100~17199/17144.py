# 미세먼지 안녕! 
# 시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
# 1 초	512 MB	32892	18117	12156	54.302%
# 문제
# 미세먼지를 제거하기 위해 구사과는 공기청정기를 설치하려고 한다. 공기청정기의 성능을 테스트하기 위해 구사과는 집을 크기가 R×C인 격자판으로 나타냈고, 1×1 크기의 칸으로 나눴다. 구사과는 뛰어난 코딩 실력을 이용해 각 칸 (r, c)에 있는 미세먼지의 양을 실시간으로 모니터링하는 시스템을 개발했다. (r, c)는 r행 c열을 의미한다.



# 공기청정기는 항상 1번 열에 설치되어 있고, 크기는 두 행을 차지한다. 공기청정기가 설치되어 있지 않은 칸에는 미세먼지가 있고, (r, c)에 있는 미세먼지의 양은 Ar,c이다.

# 1초 동안 아래 적힌 일이 순서대로 일어난다.

# 미세먼지가 확산된다. 확산은 미세먼지가 있는 모든 칸에서 동시에 일어난다.
# (r, c)에 있는 미세먼지는 인접한 네 방향으로 확산된다.
# 인접한 방향에 공기청정기가 있거나, 칸이 없으면 그 방향으로는 확산이 일어나지 않는다.
# 확산되는 양은 Ar,c/5이고 소수점은 버린다.
# (r, c)에 남은 미세먼지의 양은 Ar,c - (Ar,c/5)×(확산된 방향의 개수) 이다.
# 공기청정기가 작동한다.
# 공기청정기에서는 바람이 나온다.
# 위쪽 공기청정기의 바람은 반시계방향으로 순환하고, 아래쪽 공기청정기의 바람은 시계방향으로 순환한다.
# 바람이 불면 미세먼지가 바람의 방향대로 모두 한 칸씩 이동한다.
# 공기청정기에서 부는 바람은 미세먼지가 없는 바람이고, 공기청정기로 들어간 미세먼지는 모두 정화된다.
# 다음은 확산의 예시이다.



# 왼쪽과 위쪽에 칸이 없기 때문에, 두 방향으로만 확산이 일어났다.



# 인접한 네 방향으로 모두 확산이 일어난다.



# 공기청정기가 있는 칸으로는 확산이 일어나지 않는다.

# 공기청정기의 바람은 다음과 같은 방향으로 순환한다.



# 방의 정보가 주어졌을 때, T초가 지난 후 구사과의 방에 남아있는 미세먼지의 양을 구해보자.

# 입력
# 첫째 줄에 R, C, T (6 ≤ R, C ≤ 50, 1 ≤ T ≤ 1,000) 가 주어진다.

# 둘째 줄부터 R개의 줄에 Ar,c (-1 ≤ Ar,c ≤ 1,000)가 주어진다. 공기청정기가 설치된 곳은 Ar,c가 -1이고, 나머지 값은 미세먼지의 양이다. -1은 2번 위아래로 붙어져 있고, 가장 윗 행, 아랫 행과 두 칸이상 떨어져 있다.

# 출력
# 첫째 줄에 T초가 지난 후 구사과 방에 남아있는 미세먼지의 양을 출력한다.

# 예제 입력 1  복사
# 7 8 1
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 1  복사
# 188
# 미세먼지의 확산이 일어나면 다음과 같은 상태가 된다. 



# 공기청정기가 작동한 이후 상태는 아래와 같다.



# 예제 입력 2  복사
# 7 8 2
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 2  복사
# 188
# 예제 입력 3  복사
# 7 8 3
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 3  복사
# 186
# 예제 입력 4  복사
# 7 8 4
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 4  복사
# 178
# 예제 입력 5  복사
# 7 8 5
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 5  복사
# 172
# 예제 입력 6  복사
# 7 8 20
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 6  복사
# 71
# 예제 입력 7  복사
# 7 8 30
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 7  복사
# 52
# 예제 입력 8  복사
# 7 8 50
# 0 0 0 0 0 0 0 9
# 0 0 0 0 3 0 0 8
# -1 0 5 0 0 0 22 0
# -1 8 0 0 0 0 0 0
# 0 0 0 0 0 10 43 0
# 0 0 5 0 15 0 0 0
# 0 0 40 0 0 0 20 0
# 예제 출력 8  복사
# 46

import sys, copy
from collections import deque

input = sys.stdin.readline

R, C, T = map(int, input().split())
room = []
q = deque()
y1, x1, y2, x2 = 0, 0, 0, 0
cnt = 0

for idx1 in range(R):
    room.append(list(map(int, input().rstrip().split())))
    if -1 in room[idx1] and y1 == 0:
        y1 = idx1
        y2 = idx1 + 1

dx = [0, 0, 1, -1]
dy = [1, -1, 0, 0]
room2 = copy.deepcopy(room)

while cnt < T:
    for idx1 in range(R):
        for idx2 in range(C):
            if room[idx1][idx2] != 0 and room[idx1][idx2] != -1:
                q.append((idx1, idx2))

    while q:
        check = 0
        y, x = q.popleft()
        
        for i in range(4):
            ty = y + dy[i]
            tx = x + dx[i]

            if 0 <= ty < R and 0 <= tx < C and room[ty][tx] != -1:
                check += 1
                room2[ty][tx] += room[y][x] // 5
                
        room2[y][x] -= room[y][x] // 5 * check

    for idx in range(y1-1, 0, -1):
        room2[idx][0] = room2[idx-1][0]

    for idx in range(y2+1, R-1):
        room2[idx][0] = room2[idx+1][0]

    for idx in range(0, C-1):
        room2[0][idx] = room2[0][idx+1]
        room2[R-1][idx] = room2[R-1][idx+1]

    for idx in range(0, y1):
        room2[idx][C-1] = room2[idx+1][C-1]

    for idx in range(R-1, y2, -1):
        room2[idx][C-1] = room2[idx-1][C-1]

    for idx in range(C-1, 1, -1):
        room2[y1][idx] = room2[y1][idx-1]
        room2[y2][idx] = room2[y2][idx-1]
    cnt += 1
    
    room2[y1][1] = 0
    room2[y2][1] = 0
    room = copy.deepcopy(room2)
answer = 0
for r in room:
    answer += sum(r)
print(answer+2)
